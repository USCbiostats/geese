# Generated by roxygen2: do not edit by hand

S3method(names,flock)
S3method(names,geese)
S3method(print,flock)
S3method(print,geese)
export(add_geese)
export(conditional_prob)
export(geese_mcmc)
export(geese_mle)
export(get_probabilities)
export(get_sequence)
export(get_support)
export(init_model)
export(likelihood)
export(new_flock)
export(new_geese)
export(nfuns)
export(nleafs)
export(nnodes)
export(nterms)
export(ntrees)
export(observed_counts)
export(parse_polytomies)
export(predict_flock)
export(predict_geese)
export(print_observed_counts)
export(rule_limit_changes)
export(set_seed)
export(sim_geese)
export(support_size)
export(term_cogain)
export(term_coopt)
export(term_gains)
export(term_gains_from_0)
export(term_genes_changing)
export(term_k_genes_changing)
export(term_kgains)
export(term_less_than_p_prop_genes_changing)
export(term_loss)
export(term_maxfuns)
export(term_neofun)
export(term_neofun_a2b)
export(term_overall_changes)
export(term_overall_gains)
export(term_overall_gains_from_0)
export(term_overall_loss)
export(term_pairwise_first_gain)
export(term_pairwise_overall_change)
export(term_pairwise_preserving)
export(term_preserve_pseudogene)
export(term_prop_genes_changing)
export(term_subfun)
export(transition_prob)
importFrom(Rcpp,sourceCpp)
importFrom(fmcmc,MCMC)
importFrom(stats,optim)
useDynLib(geese, .registration = TRUE)
